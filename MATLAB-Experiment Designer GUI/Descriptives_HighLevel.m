% Descriptives statistics
function Descriptives_HighLevel(experiment_session)

%Build Figure Window - Set primary parameters 
fig = figure('units','normalized','outerposition',[0.4 0.3 0.3 0.5]);
    set(fig, 'MenuBar', 'none');
    set(fig, 'ToolBar', 'none');
    set(fig,  'Resize',  'off');
    set(fig, 'Name', 'Descriptive Statistics');
    
 %Define GUI Page Panels 
 pnl1 = uipanel(fig,'Title','Central Tendency', 'FontWeight','Bold',...
                'BackgroundColor','white',...
                'Position',[0.5 0.4 0.3 0.55],...
                'Fontsize', 9);
  pnl2 = uipanel(fig,'Title','Distribution', 'FontWeight','Bold',...
                'BackgroundColor','white',...
                'Position',[0.5 0.05 0.3 0.3],...
                'Fontsize', 10);   
            
  pnl3 = uipanel(fig,'Title','Dispersion', 'FontWeight','Bold',...
                'BackgroundColor','white',...
                'Position',[0.05 0.05 0.4 0.3],...
                'Fontsize', 10);  
            
  pnl4 = uipanel(fig,'Title','Additional', 'FontWeight','Bold',...
                'BackgroundColor','white',...
                'Position',[0.05 0.4 0.4 0.55],...
                'Fontsize', 10);  
 
% Define GUI Page SubPanels
subpn0 = uibuttongroup(pnl1,'Position',[0.05, 0.04, 0.92, 0.95]);
subpnl = uipanel(pnl2,'Position',[0.055, 0.1, 0.9, 0.9]);
subpn2 = uipanel(pnl3,'Position',[0.05, 0.09, 0.9, 0.9]);
subpn3 = uipanel(pnl4,'Position',[0.055, 0.03, 0.9, 0.97]);
              
mean = uicontrol(subpn0,'Style',...
                  'checkbox',...
                  'String','Mean',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.8, 0.55, 0.1],...
                  'FontSize', 11,...
                  'HandleVisibility','off');  
              
median = uicontrol(subpn0,'Style',...
                  'checkbox',...
                  'String','Median',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.58, 0.65, 0.1],...
                  'FontSize', 11,...
                  'HandleVisibility','off');
          
mode = uicontrol(subpn0,'Style',...
                  'checkbox',...
                  'String','Mode',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.35, 0.55, 0.1],...
                  'FontSize', 11,...
                  'HandleVisibility','off'); 
              
sum_in = uicontrol(subpn0,'Style',...
                  'checkbox',...
                  'String','Sum',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.1, 0.65, 0.1],...
                  'FontSize', 11,...
                  'HandleVisibility','off'); 
%==========================================================================
%                               Distribution
%==========================================================================
Skewness = uicontrol(subpnl,'Style',...
                  'checkbox',...
                  'String','Skewness',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.65, 0.85, 0.2],...
                  'FontSize', 10,...
                  'HandleVisibility','off'); 
            
Kurtosis = uicontrol(subpnl,'Style',...
                  'checkbox',...
                  'String','Kurtosis',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.2, 0.85, 0.2],...
                  'FontSize', 10,...
                  'HandleVisibility','off'); 
              
%==========================================================================
%                               Dispersion
%==========================================================================
std = uicontrol(subpn2,'Style',...
                  'checkbox',...
                  'String','Std',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.65, 0.85, 0.2],...
                  'FontSize', 8,...
                  'HandleVisibility','off'); 
            
variance = uicontrol(subpn2,'Style',...
                  'checkbox',...
                  'String','Variance',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.2, 0.85, 0.2],...
                  'FontSize', 8,...
                  'HandleVisibility','off'); 
              
min = uicontrol(subpn2,'Style',...
                  'checkbox',...
                  'String','Min',...
                  'units', 'normalized',...
                  'Position',[0.65, 0.65, 0.85, 0.2],...
                  'FontSize', 8,...
                  'HandleVisibility','off'); 
            
max = uicontrol(subpn2,'Style',...
                  'checkbox',...
                  'String','Max',...
                  'units', 'normalized',...
                  'Position',[0.65, 0.2, 0.85, 0.2],...
                  'FontSize', 8,...
                  'HandleVisibility','off'); 
              
%==========================================================================
%                           Additional 
%==========================================================================

Show_Data = uicontrol(subpn3,'Style', 'popup',... 
                    'Units', 'Normalized',... 
                    'Position', [0.1 0.45 0.8 0.5],...
                    'FontSize', 8, ...
                    'FontWeight', 'normal',...
                    'String', {'Reaction Times', 'Accuracy'});
                
quartiles = uicontrol(subpn3,'Style',...
                  'checkbox',...
                  'String','Quartiles',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.6, 0.85, 0.15],...
                  'FontSize', 10,...
                  'HandleVisibility','off',...
                  'Visible', 'off'); 
              
              
 add_txtbox = uicontrol(subpn3,'Style',...
                  'edit',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.25, 0.3, 0.15],...
                  'FontSize', 8,...
                  'HandleVisibility','off'); 
              
         
selected_percentiles = uicontrol(subpn3,'Style', 'popup',... 
                    'Units', 'Normalized',... 
                    'Position', [0.1 0.1 0.8 0.1],...
                    'FontSize', 8, ...
                    'FontWeight', 'normal',...
                    'String', {'Selected Values'});
                
 add = uicontrol(subpn3,'Style',...
                  'pushbutton',...
                  'String', 'Add',...
                  'units', 'normalized',...
                  'Position',[0.6, 0.25, 0.3, 0.15],...
                  'FontSize', 8,...
                  'Callback', {@AddPercentile,fig, Show_Data, add_txtbox, selected_percentiles},... 
                  'HandleVisibility','off',...
                  'Visible', 'off'); 
              
 percentiles = uicontrol(subpn3,'Style',...
                  'checkbox',...
                  'String','Percentiles',...
                  'units', 'normalized',...
                  'Position',[0.1, 0.4, 0.85, 0.2],...
                  'FontSize', 10,...
                  'HandleVisibility','off',...
                  'Value', 0,...
                  'Callback', {@percentilefunc, add, fig}); 
              
 Apply = uicontrol(fig,'Style',...
                  'Pushbutton',...
                  'String','Apply',...
                  'units', 'normalized',...
                  'Position',[0.815, 0.85, 0.17, 0.1],...
                  'FontSize', 8,...
                  'HandleVisibility','off',...
                  'Callback', {@Applyfunc,fig, experiment_session,mean,median,mode,sum_in,Skewness,...
                               Kurtosis,std,variance,min,max,quartiles,Show_Data,percentiles});

Cancel = uicontrol(fig,'Style',...
                  'Pushbutton',...
                  'String','Cancel',...
                  'units', 'normalized',...
                  'Position',[0.815, 0.75, 0.17, 0.1],...
                  'FontSize', 8,...
                  'Callback', {@Cancelfunc, fig},...
                  'HandleVisibility','off');
      
             
               
%==========================================================================
%                       Functions
%==========================================================================
function Cancelfunc(source, event, fig)
    close(fig)
end 


function percentilefunc(source, event, add, fig)
    if source.Value == 1
        set(add, 'Visible', 'on');
        refresh(fig)
    elseif source.Value == 0
        set(add, 'Visible', 'off');
        refresh(fig)
    end 
end 


function AddPercentile(source, event, fig, Show_Data, add_txtbox, selected_percentiles)
    percentile = oricle_input_check5_RemoveWhiteSpace(add_txtbox.String);
    %==========================================================================
    %                               Check 
    %==========================================================================
    oricle_input_check1(percentile, 'y', 'mixed=y');
    Dependent_Var = Show_Data.String(Show_Data.Value);
    switch Dependent_Var{1, 1}
        case 'Reaction Times'
            entry = strcat('RT =  ', percentile);
        case 'Accuracy'
            entry = strcat('Ac =  ', percentile);
    end      
    descriptives_current_entries = cellstr(get(selected_percentiles, 'String'));
    descriptives_current_entries{end + 1} = entry;
    setappdata(fig, 'percentile', entry);
    setappdata(fig,'descriptives_current_entries', descriptives_current_entries);
    set(selected_percentiles, 'String', descriptives_current_entries);      
end


function Applyfunc(source, event,fig, experiment_session, mean,median,mode,sum_in,Skewness,...
                               Kurtosis,std,variance,min,max,quartiles,Show_Data,percentiles) 
  try    
   %Descritive Stats calculation. Top section is split into descritives (mean, mode, median ect 
   %for reaction times then Accuracy. Last section at bottom is percentile calcs which follow the same structure)
   
   dependent_var = Show_Data.String(Show_Data.Value);
   percentile_in = percentiles.Value;
   LenExperiment_Session = length(experiment_session);
        
   vector = [mean.Value median.Value mode.Value sum_in.Value Skewness.Value,...
   Kurtosis.Value std.Value variance.Value min.Value max.Value];
   if ~isequal(sum(vector), 0)
       if strcmp(dependent_var{1, 1},'Reaction Times')
            for j = 1:LenExperiment_Session
                   Descriptive_Table = Descriptives_LowLevel(experiment_session{1,j}(:, 2), vector);
                   Descriptive_store(j, :) = Descriptive_Table;
            end 
            TableType =  'Descriptives';
            uiTableCreator('Data',Descriptive_store,'TableType', TableType,'Conditions', experiment_session{2, 1}{1, 2},'Measure', dependent_var{1, 1});
       elseif strcmp(dependent_var{1, 1},'Accuracy')
            for j = 1:LenExperiment_Session
                   percent_acc_vect = Percent_Acc_Calc(experiment_session);
                   [PercRows, ~] = size(percent_acc_vect);
                   for d = 1:PercRows
                   Descriptive_Table = Descriptives_LowLevel(percent_acc_vect(d,:), vector);
                   Descriptive_store(d, :) = Descriptive_Table;
                   end 
            end 
            TableType =  'Descriptives';
            uiTableCreator('Data',Descriptive_store,'TableType', TableType, 'Conditions', experiment_session{2, 1}{1, 2}, 'Measure', dependent_var{1, 1});
       end 
   end 
  %========================================================================
  %                        Percentiles calculation 
  %========================================================================
  TableType =  'Percentiles';
   if percentile_in == 1 
       percentile_list = getappdata(fig,'descriptives_current_entries');
       if isempty(percentile_list)
           error('Error: No Percentile Chosen');
       end 
       for g = 1:1
            scope_list = percentile_list{g};
            if strcmp(scope_list, 'Selected Values')
                percentile_list(g) = [];
            end 
       end 

       LenPercentile_list = length(percentile_list);
       %percentile_store = zeros(LenPercentile_list, LenExperiment_Session);
       a = 0;
       for i = 1:LenPercentile_list
           scope = percentile_list{i, 1};
           if strcmp(scope(1, 1), 'R') && strcmp(dependent_var{1, 1},'Reaction Times')
               for j = 1:LenExperiment_Session
                   percent = prctile(experiment_session{1,j}(:, 2),double(string(scope(1,[5, end]))));
                   percentile_store(i, j) = percent;
               end 
               scope_store(i) = string(scope(1,[5, end]));
               
           elseif strcmp(scope(1, 1), 'A') && strcmp(dependent_var{1, 1},'Accuracy')
               a = a + 1;
               percent_acc_vect = Percent_Acc_Calc(experiment_session);
               [PercRows, ~] = size(percent_acc_vect);
               for j = 1:PercRows
                   percentile = prctile(percent_acc_vect(j, :), double(string(scope(1,[5, end]))));
                   percentile_store(a,j) = percentile;        
               end 
              scope_store(a) = string(scope(1,[5, end]));
           end 
          
          
       end
      
                uiTableCreator('Data',percentile_store,'TableType', TableType,...
                           'Conditions', experiment_session{2, 1}{1, 2},...
                           'Measure', dependent_var{1, 1},...
                           'Percentile',scope_store);
   end 
        
        
 catch Exception
        if strcmp(Exception.message,'Error: No Percentile Chosen')
            questdlg('Error: Please Select a Percentile Value', 'Error', 'OK', 'OK');
        end 
 end 
    
end 
end 
